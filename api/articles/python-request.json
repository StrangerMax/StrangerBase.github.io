{"title":"Request 自动化测试","uid":"da904cef7bb0ac4414b4ff066d2a6cb4","slug":"python-request","date":"2022-05-31T13:17:18.000Z","updated":"2022-06-03T11:58:54.458Z","comments":true,"path":"api/articles/python-request.json","keywords":null,"cover":"https://pic.3gbizhi.com/2020/0918/thumb_1680_0_20200918123518423.jpg","content":"<h1 id=\"Request\"><a href=\"#Request\" class=\"headerlink\" title=\"Request\"></a>Request</h1><h2 id=\"请求方式\"><a href=\"#请求方式\" class=\"headerlink\" title=\"请求方式\"></a>请求方式</h2><h3 id=\"Get\"><a href=\"#Get\" class=\"headerlink\" title=\"Get\"></a>Get</h3><ul>\n<li><p>作用 ：<strong>请求指定的页面信息，并返回实体主体</strong>；获取资源(查询)</p>\n</li>\n<li><p>方法调用：</p>\n<ul>\n<li>调用get方法 r &#x3D;  request.get(“xxx”)</li>\n</ul>\n</li>\n<li><p>参数：params：字典或字符串（推荐使用字典</p>\n<ul>\n<li>params &#x3D; {“id”:1001}</li>\n<li>params &#x3D; {“id”:”1001,1002”}</li>\n<li>params &#x3D; {“id”:1001,”kw”:”北京”}</li>\n</ul>\n</li>\n<li><p>响应：</p>\n<ul>\n<li>获取URL：r.url</li>\n<li>获取响应状态码:  r.status_code</li>\n<li>获取响应信息: r.text</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\n\nurl &#x3D; &quot;http:&#x2F;&#x2F;www.baidu.com&quot;\n#定义字典\n# params &#x3D; &#123;&quot;id&quot;:1001&#125;         #url : http:&#x2F;&#x2F;www.baidu.com&#x2F;?id&#x3D;1001\n# params &#x3D; &#123;&quot;id&quot;:&quot;1001,1002&quot;&#125;  #url : http:&#x2F;&#x2F;www.baidu.com&#x2F;?id&#x3D;1001%2C1002  #%2C ASCII码为逗号\nparams &#x3D; &#123;&quot;id&quot;:1001,&quot;kw&quot;:&quot;北京&quot;&#125; #url : http:&#x2F;&#x2F;www.baidu.com&#x2F;?id&#x3D;1001&amp;kw&#x3D;北京\n#请求是带参 params\nr &#x3D; requests.get(url,params &#x3D; params)  #r为响应数据对象\n\nprint(&quot;URL&quot;,r.url)\t\t\t\t   #获取URL\nprint(&quot;响应状态码&quot;,r.status_code)   #响应状态码\nprint(&quot;响应信息&quot;,r.text)\t\t\t#响应信息</code></pre></li>\n</ul>\n<h3 id=\"Post\"><a href=\"#Post\" class=\"headerlink\" title=\"Post\"></a>Post</h3><ul>\n<li><p>作用：<strong>请求服务器接受所指定的文档作为对所标识的URI的新的从属实体；</strong></p>\n</li>\n<li><p>方法调用：</p>\n<ul>\n<li>调用POST方法 requests.post(url, data&#x3D;{key: value}, json&#x3D;{key: value}, headers)</li>\n</ul>\n</li>\n<li><p>参数：</p>\n<ul>\n<li>url：URL地址 即接口</li>\n<li>json：请求报文（<strong>注：</strong>可用json.dumps(data),将字典对象转为json字符串）</li>\n<li>Headers：请求信息头</li>\n</ul>\n</li>\n<li><p>响应：</p>\n<ul>\n<li>获取响应对象： r.json()    以json文本形式响应**&lt;class ‘dict’&gt;**</li>\n<li>获取响应状态码:  r.status_code</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\n\nurl &#x3D; &quot;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;api&#x2F;login&#x2F;&quot;\n#请求headers\nheaders &#x3D; &#123;&quot;Content-Type&quot;: &quot;application&#x2F;json&quot;&#125;\n#请求json\ndata &#x3D; &#123;根据实际api文档填写&#125;\nr &#x3D; requests.post(url,json &#x3D; data, headers &#x3D; headers) \n#获取响应对象\nprint(r.json())\t\n#响应状态码   正常返回 201\nprint(r.status_code)  </code></pre>\n\n\n\n<h3 id=\"Put\"><a href=\"#Put\" class=\"headerlink\" title=\"Put\"></a>Put</h3><ul>\n<li>作用：<strong>更新资源、数据</strong></li>\n<li>方法调用：<ul>\n<li>requests.put(url，data&#x3D;{“key”,”value”}，headers)</li>\n</ul>\n</li>\n<li>参数：<ul>\n<li>参考post方法参数</li>\n</ul>\n</li>\n<li>响应：<ul>\n<li>获取响应对象： r.json()    以json文本形式响应**&lt;class ‘dict’&gt;**</li>\n<li>获取响应状态码:  r.status_code</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h3><ul>\n<li>作用：<strong>删除资源</strong></li>\n<li>方法调用：<ul>\n<li>requests.delete(url)</li>\n</ul>\n</li>\n<li>参数：<ul>\n<li>对应api</li>\n</ul>\n</li>\n<li>响应：<ul>\n<li>获取响应状态码:  r.status_code    204</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Head\"><a href=\"#Head\" class=\"headerlink\" title=\"Head\"></a>Head</h3><ul>\n<li>作用：<strong>只请求页面的首部</strong></li>\n<li>方法调用：<ul>\n<li>requests.head(url)</li>\n</ul>\n</li>\n<li>参数：<ul>\n<li>对应api</li>\n</ul>\n</li>\n<li>响应：<ul>\n<li>获取响应状态码:  r.status_code</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"响应内容\"><a href=\"#响应内容\" class=\"headerlink\" title=\"响应内容\"></a>响应内容</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\n\nurl &#x3D; &quot;http:&#x2F;&#x2F;www.baidu.com&quot;\nr &#x3D; requests.get(url)\n\nr.encoding                #获取当前响应头部的编码\nr.encoding &#x3D; &#39;utf-8&#39;      #可设置编码\nr.text                    #以encoding解析返回内容。字符串方式的响应体，会自动根据响应头部的字符编码进行解码。\nr.url\t\t\t\t\t  #请求url\nr.content                 #以字节形式（二进制）返回。字节方式的响应体，会自动为你解码gzip和deflate压缩\n\nr.headers                 #以字典对象存储服务器响应头，但是这个字典比较特殊，字典键不区分大小写，若键不存在则返回None\n\nr.status_code             #响应状态码\nr.raw                     #返回原始响应体，也就是 urllib 的 response 对象，使用 r.raw.read()   \nr.ok                      # 查看r.ok的布尔值便可以知道是否登陆成功\n\nr.cookies\t\t\t\t  #获取响应cookies信息（服务器产生）；区分统一请求客户端\n\n #*特殊方法*#\nr.json()                  #Requests中内置的JSON解码器，以json形式返回,前提返回的内容确保是json格式的，不然解析出错会抛异常\nr.raise_for_status()      #失败请求(非200响应)抛出异常</code></pre>\n\n\n\n<h2 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h2><ul>\n<li><p>Session作用：requests中的<strong>session</strong>对象能够让我们<strong>跨http请求保持某些参数</strong></p>\n<ul>\n<li><p>即让同一个session对象发送的请求头携带某个指定的参数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\n \ns &#x3D; requests.Session()\n# 第一步：发送一个请求，用于设置请求中的cookies\n# tips: http:&#x2F;&#x2F;httpbin.org能够用于测试http请求和响应\ns.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;sessioncookie&#x2F;123456789&#39;)\n# 第二步：再发送一个请求，用于查看当前请求中的cookies  ##携带了第一次设置的cookie\nr &#x3D; s.get(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;cookies&quot;)\nprint(r.text)\n\n##输出：\n&#123;\n  &quot;cookies&quot;: &#123;\n    &quot;sessioncookie&quot;: &quot;123456789&quot;\n  &#125;\n&#125;</code></pre></li>\n</ul>\n</li>\n<li><p>方法调用：</p>\n<ul>\n<li>requests.session() <ul>\n<li>表示一次用户会话，起始于客户端连接服务器，终止于客户端与服务器断开</li>\n</ul>\n</li>\n<li>两种方式<ul>\n<li>requests 直接发送请求  —get&#x2F;post</li>\n<li>requests.session() 发送请求.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":"Request请求方式Get 作用 ：请求指定的页面信息，并返回实体主体；获取资源(查询) 方法调用： 调用get方法 r &#x3D; request.get(“xxx”) 参数：params：字典或字符串（推荐使用字典 params &#x3D; {“id”:1001} pa...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Request","slug":"Request","count":1,"path":"api/tags/Request.json"},{"name":"自动化测试","slug":"自动化测试","count":1,"path":"api/tags/自动化测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Request\"><span class=\"toc-text\">Request</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">请求方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Get\"><span class=\"toc-text\">Get</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Post\"><span class=\"toc-text\">Post</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Put\"><span class=\"toc-text\">Put</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Delete\"><span class=\"toc-text\">Delete</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Head\"><span class=\"toc-text\">Head</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">响应内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Session\"><span class=\"toc-text\">Session</span></a></li></ol></li></ol>","author":{"name":"StrangerMax","slug":"blog-author","avatar":"https://biaoqingba.cn/wp-content/uploads/2019/10/6447a2207d34433.jpg","link":"/","description":"记录八股文及Go相关内容<br />学起来！！！！","socials":{"github":"https://github.com/StrangerMax","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43957499","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数据库-查询","uid":"fdb6a521ab89f404af42557593409f9d","slug":"SQL","date":"2022-06-01T11:49:31.000Z","updated":"2022-06-02T11:36:30.185Z","comments":true,"path":"api/articles/SQL.json","keywords":null,"cover":"https://pic.3gbizhi.com/2020/0904/20200904073240878.jpg.556.308.jpg","text":" 连接查询： 内连接&#x2F;左连接&#x2F;右连接&#x2F;自关联 子查询：查询语句中包含另一个查询语句 数据库高级： 数据库ER 模型 &#x2F; 外键 &#x2F; 索引 SQL数据库通配符 通配符可用于替代字符串中的任何其他字符。 通配符 描述 % 替代 0 个或...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"SQL","slug":"SQL","count":1,"path":"api/tags/SQL.json"},{"name":"连接查询","slug":"连接查询","count":1,"path":"api/tags/连接查询.json"},{"name":"子查询","slug":"子查询","count":1,"path":"api/tags/子查询.json"},{"name":"高级","slug":"高级","count":1,"path":"api/tags/高级.json"}],"author":{"name":"StrangerMax","slug":"blog-author","avatar":"https://biaoqingba.cn/wp-content/uploads/2019/10/6447a2207d34433.jpg","link":"/","description":"记录八股文及Go相关内容<br />学起来！！！！","socials":{"github":"https://github.com/StrangerMax","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43957499","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"OSI七层模型","uid":"60c63987b3ca1fdd77ae38c4f1e65abe","slug":"Web-OSI","date":"2022-05-28T12:04:57.000Z","updated":"2022-05-29T14:10:37.542Z","comments":true,"path":"api/articles/Web-OSI.json","keywords":null,"cover":"https://pic.3gbizhi.com/2020/0919/thumb_1680_0_20200919021643541.jpg","text":"OSI七层模型OSI七层模型详解 简化相关网络操作 提供不同厂商的兼容性 促进标准化工作 结构上进行分层，易于学习和操作 分层1.物理层 ： 2.数据链路层 3.网络层 4.传输层 5.会话层 6.表示层 7.应用层 物理层","link":"","photos":[],"count_time":{"symbolsCount":114,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","count":2,"path":"api/tags/计算机网络.json"},{"name":"OSI","slug":"OSI","count":1,"path":"api/tags/OSI.json"}],"author":{"name":"StrangerMax","slug":"blog-author","avatar":"https://biaoqingba.cn/wp-content/uploads/2019/10/6447a2207d34433.jpg","link":"/","description":"记录八股文及Go相关内容<br />学起来！！！！","socials":{"github":"https://github.com/StrangerMax","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43957499","juejin":"","customs":{}}},"feature":true}}